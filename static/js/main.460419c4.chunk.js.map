{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["comparePackageUsage","a","b","weight","usage","module","getModuleId","packageId","subpath","ShowEsmPackageUsage","packageInfo","Array","isArray","export","map","exportInfo","importSpecifier","type","local","bindings","exports","binding","exported","join","printImportSpecifier","path","showTypesOverride","ShowCommonJsPackageUsage","ShowTypes","types","definitelyTyped","href","subPathTypes","moduleId","App","props","state","database","fetchDatabase","setState","this","className","Helmet","component","match","useRouteMatch","useParams","packages","usages","slice","sort","length","ShowPackageInfo","Object","keys","packageName","to","Packages","React","Component","fetch","process","response","json","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.460419c4.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport './List.css';\nimport { CanIUseNpmDatabase, CommonJsUsage, EsmUsage, ImportSpecifier, PackageInfo, PackageUsage } from './Database';\nimport { Helmet } from 'react-helmet';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link,\n    useParams,\n    useRouteMatch\n} from \"react-router-dom\";\n\nclass App extends React.Component<{}, {\n    database: CanIUseNpmDatabase;\n}> {\n    constructor(props: {}) {\n        super(props);\n        this.state = {\n            database: null!,\n        };\n    }\n\n    componentDidMount() {\n        (async () => {\n            const database = await fetchDatabase();\n            this.setState({ database, });\n        })();\n    }\n\n    render() {\n        const { database } = this.state;\n        return database && <div className=\"App\">\n            <Helmet>\n                <title>Can I use ... npm module..</title>\n            </Helmet>\n\n            <Router>\n                <div>\n                    <Switch>\n                        <Route path=\"/\" component={() => Packages(database)}>\n                        </Route>\n                    </Switch>\n                </div>\n            </Router>\n        </div>;\n    }\n}\n\nfunction Packages(database: CanIUseNpmDatabase) {\n    let match = useRouteMatch();\n    if (!database) {\n        return <div></div>;\n    }\n    return <Router>\n        <div>\n            <h1> 我能否在 Cocos Creator 中使用 npm 包…… </h1>\n            <Switch>\n                <Route path={`${match.path}packages/:packageId`} component={() => ShowPackageInfo(database)}>\n                </Route>\n                <Route path={match.path}>\n                    <nav>\n                        <ul>{\n                            Object.keys(database!.packages).map((packageName) => <li key={packageName}>\n                                <Link to={`${match.path}packages/${packageName}`}>\n                                    {packageName}\n                                </Link>\n                            </li>)\n                        }</ul>\n                    </nav>\n                </Route>\n            </Switch>\n        </div>\n    </Router>\n}\n\nfunction comparePackageUsage (a: PackageUsage, b: PackageUsage) {\n    const weight = (usage: PackageUsage) => usage.module === 'module' ? 0 : 1;\n    return weight(a) - weight(b);\n}\n\nfunction ShowPackageInfo(database: CanIUseNpmDatabase) {\n    const { packageId } = useParams<{ packageId: string }>();\n    const packageInfo = database.packages[packageId];\n    if (!packageInfo) {\n        return <div>我们暂未收录此包的用法。</div>\n    }\n    const usages = Array.isArray(packageInfo.usage) ? packageInfo.usage : [packageInfo.usage];\n    usages.slice().sort(comparePackageUsage);\n    return (<div>\n        <a href={`https://www.npmjs.com/package/${packageId}`}>{`npmjs.com/package/${packageId}`}</a>\n        <ul>\n            <li> 可用：{usages.length > 0 ? '✔️' : '❌'}</li>\n            <li> 安装：npm install --save {packageId}</li>\n            <li> {ShowTypes(packageId, packageInfo)}</li>\n            {\n                usages.map((usage) => <li> {\n                    usage.module === 'module'\n                        ? ShowEsmPackageUsage(packageId, packageInfo, usage)\n                        : ShowCommonJsPackageUsage(packageId, packageInfo, usage)\n                } </li>)\n            }\n        </ul>\n    </div>)\n}\n\nfunction getModuleId (packageId: string, subpath: string) {\n    return subpath === '.' ? packageId : `${packageId}/${subpath}`;\n}\n\nfunction printImportSpecifier(importSpecifier: ImportSpecifier) {\n    switch (importSpecifier.type) {\n        case 'default': return `${importSpecifier.local}`;\n        case 'namespace': return `* as ${importSpecifier.local}`\n        case 'named': {\n            const bindings = Array.isArray(importSpecifier.exports) ? importSpecifier.exports : [importSpecifier.exports];\n            return `{ ${bindings.map((binding) => typeof binding === 'string'\n                ? binding :\n                `${binding.exported} as ${binding.local}`).join(', ')} }`;\n        }\n    }\n}\n\nfunction ShowEsmPackageUsage(packageId: string, packageInfo: PackageInfo, usage: EsmUsage) {\n    return (<div>\n        用法：ESM 模块\n        <div>\n        {<pre>\n            {(Array.isArray(usage.export) ? usage.export : [usage.export]).map((exportInfo) => {\n                return `import ${printImportSpecifier(exportInfo)} from \"${getModuleId(packageId, usage.path)}\";`;\n            }).join(`\\n或\\n`)}\n        </pre>}\n        {showTypesOverride(packageId, packageInfo, usage)}\n        </div>\n    </div>)\n}\n\nfunction ShowCommonJsPackageUsage(packageId: string, packageInfo: PackageInfo, usage: CommonJsUsage) {\n    return (<div>\n        用法：CommonJS 模块\n        <div>\n        {<pre>\n            {`import ${usage.local} from \"${getModuleId(packageId, usage.path)}\";`}\n        </pre>}\n        {showTypesOverride(packageId, packageInfo, usage)}\n        </div>\n    </div>)\n}\n\nfunction ShowTypes(packageId: string, packageInfo: PackageInfo) {\n    const { types } = packageInfo;\n    if (!types) {\n        return;\n    }\n    const { definitelyTyped } = types;\n    return (<div>\n        {(() => {\n            if (definitelyTyped) {\n                return <div>\n                    此包的类型定义存放在 <a href=\"https://github.com/DefinitelyTyped/DefinitelyTyped\">DefinitelyTyped</a> 上。\n                    <br/>\n                    通过以下方式安装：\n                    <pre>\n                        npm install --save-dev @types/{packageId}\n                    </pre>\n                </div>;\n            } else {\n                return <div>\n                    此包本身提供了类型定义。\n                </div>;\n            }\n        })()}\n        \n    </div>);\n}\n\nfunction showTypesOverride(packageId: string, packageInfo: PackageInfo, usage: EsmUsage | CommonJsUsage) {\n    const { types } = packageInfo;\n    if (!types) {\n        return;\n    }\n    const { subPathTypes } = types;\n    return (<div>\n        {(() => {\n            if (usage.path === '.' || subPathTypes) {\n                return;\n            }\n            const moduleId = getModuleId(packageId, usage.path);\n            return (<div>\n                模块“{moduleId}”可能没有相应的类型声明。\n                <br/>\n                为了获取类型提示，将以下内容拷贝至任何 `.d.ts` 文件中，并在 tsconfig.json 中引用该 `.d.ts` 文件。\n                <pre>\n                declare module \"{moduleId}\" {`{\n                    export *${usage.module === 'module' ? '' : ' as default'} from '${packageId}';\n                }`}\n                </pre>\n            </div>)\n        })()}\n    </div>);\n}\n\nexport default App;\n\nasync function fetchDatabase() {\n    const response = await fetch(`${process.env.PUBLIC_URL}/database/index.json`);\n    const json = await response.json();\n    return json as CanIUseNpmDatabase;\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}